Добрый день. Меня зовут Мария Глухова и тема моей работы - программная реализация алгоритмов поиска аналитических кривых на изображении.
Необходимость распознавать такие кривые возникает в задачах компьютерного зрения для поиска 
более сложных фигур.
Передо мной была поставлена задача разработать, реализовать и протестировать алгоритм для 
поиска эллипсов на изображении.
Для начала разберемся, что именно нужно найти.
В каноническом уравнении эллипса участвуют два параметра: малая и большая полуось. 
Но нужно учесть, что эллипс может быть повёрнут или смещён, поэтому определить нужно ещё 
координаты центра и поворот относительно Ох. 
Итого 5 параметров.
В задачах компьютерного зрения для поиска кривых, заданных параметрически, 
используется преобразование Хафа.
К сожалению, этот алгоритм становится крайне затратным по времени и памяти с увеличением 
числа параметров, так как требует, по сути, полного перебора всех значений для этих 
параметров.
Для эллипса, у которого, как мы только что рассмотрели, нужно найти 5 параметров, 
сложность будет O(N^3), где N - количество точек границы. 
Для реальных изображений достаточно большого размера это слишком медленно. Поэтому я 
искала модификации, позволяющие сократить потребляемое время и объем памяти.
Идея алгоритма, который я вам представляю, состоит в том, чтобы проводить полный поиск 
на уменьшенном изображении, а затем уточнить найденные параметры.
Прежде всего изображение должно быть преобразовано к квадратному со стороной, равной 
степени двойке.
Также оно должно быть максимально очищено от шума - это очень важно, так как от этого 
зависит и скорость работы, и эффективность поиска преобразованием Хафа.
Затем строится так называемая иерархическая пирамида - набор матриц изображения, каждая 
из которых - уменьшенная копия предыдущей.
Потом для изображения на вершине пирамиды проводится преобразование Хафа. 
В нем тоже используется модификация, позволяющая уменьшить затраты по памяти.
Выбираются две точки, делается предположение, что они - крайние точки на большой полуоси 
и вычисляются все параметры, кроме малой полуоси.
И только потом проводится цикл по всем точкам изображения с голосованием только для малой 
полуоси.
При этом используется одномерный аккумуляторный массив.
После этого из списка эллипсов-кандидатов выбирается имеющий максимальное число голосов и 
мы можем приступить к следующему этапу, уточнению.
Уточнение проводится итеративно, и каждая итерация представляет собой такой же поиск, как 
и на предыдущем этапе, только краевые точки теперь выбираются не из всех возможных, а 
только в определенной области.
И так до тех пор, пока не вернемся к исходному размеру.
Алгоритм был реализован на C++, с использованием библиотеки OpenCV для предобработки.
Реализация была проверена на ряде изображений, синтетических и реальных, с разным уровнем 
шума. 
Хотя на зашумлёных изображениях поиск все ещё затруднен, алгоритм находит эллипсы даже 
при отношении шума к сигналу больше единицы.
